# Generated by Django 4.0.4 on 2022-07-27 13:33

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('erp_main', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True)),
                ('last_name', models.CharField(blank=True, max_length=40, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=40, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('salary_type', models.CharField(choices=[('fixed', 'fixed'), ('not_fixed', 'not fixed'), ('not_given', 'not given')], default='not_given', max_length=40)),
                ('salary', models.BigIntegerField(null=True)),
                ('passport_file', models.FileField(null=True, upload_to='passports/')),
                ('photo', models.ImageField(null=True, upload_to='profile/')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=25, null=True)),
                ('status', models.CharField(choices=[('potential', 'Potential'), ('active', 'Active'), ('partner', 'Partner'), ('delete', 'Delete')], default='potential', max_length=25)),
                ('role', models.CharField(choices=[('staff', 'staff'), ('student', 'student')], default='student', max_length=25)),
                ('phone_number', models.CharField(max_length=25, unique=True)),
                ('spend', models.FloatField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('job_latitude', models.FloatField(blank=True, null=True)),
                ('job_longitude', models.FloatField(blank=True, null=True)),
                ('home_latitude', models.FloatField(blank=True, null=True)),
                ('home_longitude', models.FloatField(blank=True, null=True)),
                ('is_user', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('achievments', models.ManyToManyField(blank=True, to='erp_main.achievment')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('is_new', models.CharField(choices=[('new', 'new'), ('old', 'old')], default='new', max_length=50)),
                ('status', models.CharField(choices=[('Через день', 'Через день'), ('1-2 раза в неделю', '1-2 раза в неделю'), ('1-3 раза в месяц', '1-3 раза в месяц'), ('Раз в 2 месяца', 'Раз в 2 месяца'), ('Другая частота проведения', 'Другая частота проведения')], max_length=50)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('clas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.class')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('current_students_number', models.IntegerField(blank=True, null=True)),
                ('limit', models.IntegerField(blank=True, null=True)),
                ('number_of_lessons_per_month', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('full', 'full'), ('open', 'open'), ('waiting', 'waiting')], max_length=20, null=True)),
                ('type_group', models.CharField(blank=True, choices=[('group', 'Group'), ('individual', 'Individual')], max_length=20, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('teachers_share', models.IntegerField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('clas', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.class')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('duration', models.IntegerField()),
                ('status', models.CharField(choices=[('old', 'old'), ('young', 'young'), ('all', 'all')], max_length=50)),
                ('number_of_lessons', models.IntegerField()),
                ('price', models.IntegerField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('clas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.class')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('established_year', models.DateField(null=True)),
                ('inn', models.BigIntegerField(null=True)),
                ('bank_account', models.BigIntegerField(null=True)),
                ('bank_name', models.CharField(max_length=300, null=True)),
                ('director', models.CharField(max_length=300, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('legal_name', models.CharField(max_length=200)),
                ('password', models.CharField(default='123', max_length=200)),
                ('contact_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('potential', 'Potential'), ('active', 'Active'), ('delete', 'Delete')], default='potential', max_length=30)),
                ('phone_number', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_code/')),
                ('address', models.CharField(max_length=300, null=True)),
                ('location1', models.CharField(blank=True, max_length=300, null=True)),
                ('location2', models.CharField(blank=True, max_length=300, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('partner', 'Partner'), ('user', 'User')], default='user', max_length=20)),
                ('name', models.CharField(max_length=300)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=20)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('token', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons/')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.question')),
            ],
        ),
        migrations.CreateModel(
            name='StudentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.events')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.group')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.variant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('group', models.ManyToManyField(blank=True, to='main.group')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.module')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_new', models.CharField(choices=[('new', 'new'), ('old', 'old')], default='new', max_length=50)),
                ('rate', models.IntegerField(blank=True, default=0, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('clas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.class')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.events')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.level')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.module')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='facilities',
            field=models.ManyToManyField(blank=True, to='main.variant'),
        ),
        migrations.AddField(
            model_name='module',
            name='parent_firm',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.module'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='module')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('clas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.class')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.module')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.level'),
        ),
        migrations.AddField(
            model_name='group',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.module'),
        ),
        migrations.AddField(
            model_name='group',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClassDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Mon'), (2, 'Tue'), (3, 'Wed'), (4, 'Thu'), (5, 'Fri'), (6, 'Sat'), (7, 'Sun')], max_length=25, null=True)),
                ('status', models.CharField(choices=[(1, 'Opening date'), (2, 'Group date')], max_length=50)),
                ('start_date', models.TimeField(blank=True, null=True)),
                ('finish_date', models.TimeField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.group')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.module')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.variant'),
        ),
        migrations.AddField(
            model_name='class',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.module'),
        ),
        migrations.AddField(
            model_name='user',
            name='module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.module'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='variant',
            field=models.ManyToManyField(blank=True, to='main.variant'),
        ),
    ]
